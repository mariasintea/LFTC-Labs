CODE -> program DECLARATIONS begin INSTRUCTIONS end
DECLARATIONS -> DECLARATION DECLARATIONS
DECLARATIONS -> DECLARATION
DECLARATION -> var VAR_NAME : TYPE ;
TYPE -> integer
TYPE -> real
INSTRUCTIONS -> INSTRUCTION INSTRUCTIONS
INSTRUCTIONS -> INSTRUCTION
INSTRUCTION -> READ_I
READ_I -> read ( VAR_NAME ) ;
INSTRUCTION -> WRITE_I
WRITE_I -> write ( RESULT ) ;
INSTRUCTION -> ATR_I
INSTRUCTION -> IF_I
INSTRUCTION -> WHILE_I
ATR_I -> VAR_NAME := RESULT ;
RESULT -> VAR_NAME
RESULT -> VAR_NAME OPERATIONS
OPERATIONS -> OPERATION OPERATIONS
OPERATIONS -> OPERATION
OPERATION -> OPERATORS VAR_NAME
OPERATORS -> *
OPERATORS -> -
OPERATORS -> +
OPERATORS -> /
OPERATORS -> %
IF_I -> IF_SYNTAX
IF_SYNTAX -> if ( CONDITIONS ) begin INSTRUCTIONS end ;
CONDITIONS -> CONDITION
CONDITIONS -> CONDITION IF_BINOPERATORS CONDITIONS
CONDITION -> VAR_NAME IF_OPERATORS VAR_NAME
CONDITION -> RESULT
IF_OPERATORS -> >
IF_OPERATORS -> <
IF_OPERATORS -> <=
IF_OPERATORS -> >=
IF_OPERATORS -> ==
IF_OPERATORS -> !=
IF_BINOPERATORS -> &&
IF_BINOPERATORS -> ||
WHILE_I -> WHILE_SYNTAX
WHILE_SYNTAX -> while ( CONDITION ) do begin INSTRUCTIONS end ;
VAR_NAME -> id